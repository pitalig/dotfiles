// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+e",
        "command": "paredit.sexpRangeExpansion",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+e",
        "command": "paredit.sexpRangeContraction",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "shift+alt+k",
        "command": "paredit.slurpSexpForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+j",
        "command": "paredit.slurpSexpBackward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "shift+alt+j",
        "command": "paredit.barfSexpForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+k",
        "command": "paredit.barfSexpBackward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "alt+s",
        "command": "paredit.spliceSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "shift+alt+s",
        "command": "paredit.splitSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+s",
        "command": "paredit.joinSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "alt+r",
        "command": "paredit.raiseSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+p ctrl+alt+r",
        "command": "-paredit.raiseSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+up",
        "command": "paredit.dragSexprBackward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "-paredit.dragSexprBackward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+down",
        "command": "paredit.dragSexprForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "-paredit.dragSexprForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "alt+d",
        "command": "paredit.killSexpForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+delete",
        "command": "-paredit.killSexpForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "shift+alt+d",
        "command": "paredit.killListForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+delete",
        "command": "-paredit.killListForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+[Quote]",
        "command": "paredit.wrapAroundQuote",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+[",
        "command": "paredit.wrapAroundSquare",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+[",
        "command": "paredit.wrapAroundCurly",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+9",
        "command": "-paredit.wrapAroundCurly",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-paredit.barfSexpBackward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+w",
        "command": "-paredit.sexpRangeExpansion",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-paredit.joinSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-paredit.sexpRangeContraction",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-paredit.slurpSexpBackward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+right",
        "command": "-paredit.slurpSexpForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+s",
        "command": "-paredit.spliceSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-paredit.splitSexp",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+alt+q",
        "command": "-paredit.wrapAroundQuote",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+alt+p",
        "command": "-paredit.wrapAroundParens",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+alt+s",
        "command": "-paredit.wrapAroundSquare",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "-paredit.wrapAroundCurly",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+backspace",
        "command": "-paredit.killListBackward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "shift+alt+l",
        "command": "calva.loadFile",
        "when": "calva:connected"
    },
    {
        "key": "ctrl+alt+c enter",
        "command": "-calva.loadFile",
        "when": "calva:connected"
    },
    {
        "key": "shift+alt+r",
        "command": "calva.loadNamespace",
        "when": "calva:connected"
    },
    {
        "key": "ctrl+alt+c ctrl+alt+n",
        "command": "-calva.loadNamespace",
        "when": "calva:connected"
    },
    {
        "key": "ctrl+enter",
        "command": "calva.replWindow.submitPrompt",
        "when": "calva:replWindowActive && calva:replWindowActive && config.calva.REPLWindowPromptKeyMap == 'multi-line'"
    },
    {
        "key": "alt+enter",
        "command": "-calva.replWindow.submitPrompt",
        "when": "calva:replWindowActive && calva:replWindowActive && config.calva.REPLWindowPromptKeyMap == 'multi-line'"
    },
    {
        "key": "ctrl+alt+c s",
        "command": "calva.selectCurrentForm"
    },
    {
        "key": "ctrl+alt+c ctrl+s",
        "command": "-calva.selectCurrentForm"
    },
    {
        "key": "ctrl+left",
        "command": "-paredit.barfSexpForward",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+c ctrl+s",
        "command": "paredit.rangeForDefun",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+w space",
        "command": "-paredit.rangeForDefun",
        "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    }
]